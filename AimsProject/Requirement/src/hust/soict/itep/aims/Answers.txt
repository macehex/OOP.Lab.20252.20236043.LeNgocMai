Question:
- If you create a constructor method to build a DVD by title then create a constructor method to build
a DVD by category. Does JAVA allow you to do this?
+ No, because the two methods have the same signature!
->  In Java, constructors (or methods) are distinguished by their parameter types and order.

â—‹ Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of
arguments for dvd. Compared to an array parameter. What do you prefer in this case?
    - I don't prefer the array parameter because when a customer add an item to their cart they only do it one title at a time.

Question: Is JAVA a Pass by Value or a Pass by Reference programming language?
    - After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
      objects still remain?
        + Because we pass the two dvd values into Object o1 and o2, there by copying the originals value into different objects and
            the function only swap the two object o1, o2 and not jungleDVD and cinderellaDVD.
    - After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
      the title of the JungleDVD changed?
        + dvd.setTitle(title) :  dvd is a copy of the reference to jungleDVD, meaning it still points to the same original object.
        + dvd.setTitle(title) : modifies the title of the object that dvd (and jungleDVD) point to.
                                dvd and jungleDVD point to the same object, the change is visible outside the method.

        + dvd = new DigitalVideoDisc(oldTitle) : dvd is reassigned to point to a new DigitalVideoDisc object.
                       However, this only affects the local copy of the reference (dvd) inside the method and the jungleDVD reference still points to the modified object, not the new one.
           Once the method ends, this new object is not referenced.